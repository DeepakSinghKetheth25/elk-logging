<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="com.shopping.orderservice.repository.OrderRepository"/>
<fullyQualifiedTypeName name="com.shopping.orderservice.service.OrderService"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.shopping.paymentservice.repository.PaymentRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="com.shopping.paymentservice.service.PaymentService"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="com.shopping.paymentservice.entity.Payment"/>
<fullyQualifiedTypeName name="java.util.UUID"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="com.shopping.orderservice.dto.PaymentDTO"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="com.shopping.orderservice.feign.PaymentFeign"/>
<fullyQualifiedTypeName name="com.shopping.orderservice.entity.Order"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="com.shopping.orderservice.dto.TransactionResponse"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
